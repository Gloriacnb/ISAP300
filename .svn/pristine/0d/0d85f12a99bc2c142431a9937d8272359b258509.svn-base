/*
 * CardPCMXC.h
 *
 *  Created on: 2015年5月28日
 *      Author: Administrator
 */

#ifndef CARDPCMXC_H_
#define CARDPCMXC_H_

#include "CBaseCard.h"
#include "ChipEmuxLogic.h"
#include "DXCAlarmDataDefine.h"
#include "XCConfigDataDefine.h"

//typedef struct {
//    DXC_Alarm_Data_T AlarmData;
//    FE1_Config_Data_T fe1port[4];
//}Card_ConfigData_PCMXC;

class PCMXCAlarmModule;
class CExtE1;
class CSTBus;
class DCCXe1Rcv;
class DCCXe1Snd;
class XcPCMClockSource;
class PortFE1;

class CardPCMXC: public CBaseCard {
public:
    CardPCMXC(std::string& name, CBaseSlot* slot);
    virtual ~CardPCMXC();

    /*virtual ConfigCell*/
    virtual void loadDefaultData(void);
    virtual uint8* getConfigDataBuff(void) {
        return (uint8*)&AlarmData;
    };
    virtual uint32 getConfigDataLen(void) {
        return sizeof(AlarmData);
    };

    /*virtual CBaseCard*/
    virtual std::string& GetCardVerInfo();
    virtual void closeInterrupt(void);
    virtual int GetCartTypeID();
    virtual void resetRemoteDevice(uint8 port);

    void setWorkLED(bool on);

    DriverPCM& getChipPCMLogic(void) {
        return fpga;
    };
private:
    friend class PCMXCAlarmModule;
    Card_ConfigData_XC* ConfigData;
    DXC_Alarm_Data_T AlarmData;
    ChipEmuxLogic fpga;
    CExtE1* exte1_obj[4];
    CSTBus* stbus_obj[5];
    CSTBus* expstbus_obj[5][16];
    PortFE1* fe1_obj[4];
    DCCXe1Rcv* dccxe1rcv_obj[4];
    DCCXe1Snd* dccxe1snd_obj[4];
    XcPCMClockSource* xcpcmLocal_obj;
    XcPCMClockSource* xcpcmclock_obj[4];

    PCMXCAlarmModule* am;
    std::string cardversionInfo;


};

#endif /* CARDPCMXC_H_ */
