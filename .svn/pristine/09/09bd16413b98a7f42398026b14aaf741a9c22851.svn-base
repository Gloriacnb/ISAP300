/*
 * NMChannel.cpp
 *
 *  Created on: 2015年10月12日
 *      Author: Administrator
 */

#include "NMChannel.h"

NMChannel::NMChannel(NM_Port_Mode_E mode) {
    // TODO Auto-generated constructor stub

}

NMChannel::~NMChannel() {
    // TODO Auto-generated destructor stub
}

bool NMChannel::receivData(void) {
    bool flag = false;
    while( havePacet() ) {
        int pkgLen = getPacketLen();
        if( (pkgLen < 20)  || (pkgLen > MTU) || (port == 0)) {
#ifdef EZ_DEBUG
            printf("\nDCCChannelRcv len %d error\n", pkgLen);
#endif
            discardPacket();
            continue;
        }
        LAYER2FRAME *frame = alloc_Eth_mem (pkgLen-4);
        if (frame != NULL ) {
            uint8* dp = frame->frame;
            getPacketData(dp,pkgLen-4,4);
            uint8 d[16] = {0};
            getPacketData(d, 16);
            Layer2Tag tag;
            tag.sn = (d[0] << 24) | (d[1] << 16) | (d[2] << 8 ) | d[3];
            memcpy( tag.decMAC, (d+4), 6);
            memcpy( tag.srcMAC, (d+10), 6);
            PriPacket* p = new PriPacket(tag, port->getPortSn(),frame);
            if( p ) {
#ifdef SW_DEBUG
                printf("DCCChannelRcv at %4d, len %d\n", p->getPrivateTag().sn, frame->length);
#endif
                p->setNMPort(this); //for topo
                port->inputPacket(p);
                flag = true;
            }
        }
        else {
            printf("\nDCCChannelRcv alloc error\n");
        }
        discardPacket();
    }
    return flag;

}
