/*
 * DCCXe1Rcv.cpp
 *
 *  Created on: 2013-7-17
 *      Author: Administrator
 */

#include "DCCXe1Rcv.h"
#include "UID.h"
#include "DriverPCM.h"

DCCXe1Rcv::DCCXe1Rcv( uint32 id, uint32 e1PortID, DriverPCM& pcm  ) : DCCChannelRcv( id, e1PortID), chip(pcm) {
    UN_Info info = UID::breakUID(id);
    hid = info.nm.sn;
}

DCCXe1Rcv::~DCCXe1Rcv() {
	// TODO Auto-generated destructor stub
}

bool DCCXe1Rcv::havePacet(void) {
    if( chip.ifSaHavePacket() && (chip.getSourceCh() == hid) ) {
        return true;
    }

    return false;
}

int DCCXe1Rcv::getPacketLen(void) {
    return chip.getSaPacketLen();
}

bool DCCXe1Rcv::getPacketData(uint8*d, uint16 len, uint16 startPos) {
    if( len == 0 ) {
        len = getPacketLen();
    }
    if( len == 0 ) {
        return false;
    }
    return chip.getSaPacket(d, len, startPos);
}

void DCCXe1Rcv::discardPacket() {
    chip.readSaPacketOver();
}
